{"version":3,"sources":["api/api.js","components/Loader/Loader.jsx","components/User/User.jsx","components/UsersList/UserList.jsx","components/SearchBar/SearchBar.jsx","components/Home/Home.jsx","components/Repo/Repo.jsx","components/RepoList/RepoList.jsx","components/UserPage/UserPage.jsx","App.js","index.js"],"names":["request","url","fetch","headers","Accept","authorization","then","response","ok","json","status","statusText","getUsers","getUserInfo","login","getUserRepos","Loader","className","User","avatar_url","selectPage","useState","repos","setRepos","prepareLogin","setPrepareLogin","loading","setLoading","useEffect","isMounted","length","slice","userInfo","public_repos","onClick","src","alt","data-tip","data-type","UsersList","users","map","user","id","SearchBar","getSearchQuery","searchQuery","placeholder","preparePlaceholder","setPreparePlaceholder","autoComplete","name","type","onChange","value","default","Home","changePlaceholder","setSearchQuery","setUsers","error","setError","sbr","items","queryUsers","usersList","event","target","Repo","forksCount","starsCount","repoName","userLogin","prepareRepoName","setPrepareRepoName","repoLink","href","rel","RepoList","repo","stargazers_count","forks","UserPage","userRepos","setUserRepos","setUserInfo","dateCreating","setDateCreating","email","location","followers","following","bio","created_at","filter","toLowerCase","includes","App","tab","setTab","setPlaceholder","loginSelectedUser","setLoginSelectedUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c09d57f8.chunk.js","sourcesContent":["const API_URL = 'https://api.github.com';\nconst usersPreview = 20;\nconst reposUser = 100;\n\nconst request = (url) => {\n  return fetch(\n    `${API_URL}${url}`,\n    {\n      headers: {\n        \"User-Agent\": \"search_github_users\",\n        Accept: \"application/vnd.github.v3+json\",\n        authorization: \"token 1c34b6ff35a8445c022973d13306fe3cb4406e94\",\n      }\n    })\n    .then(response => {\n      if (response.ok) {\n\n        return response.json();\n      }\n\n      throw `${response.status} - ${response.statusText}`\n    })\n}\n\nexport const getUsers = () => request(\n  `/users?per_page=${usersPreview}`\n)\n\nexport const getUserInfo = (login) => request(\n  `/users/${login}`\n)\n\nexport const getUserRepos = (login) => request(\n  `/users/${login}/repos?per_page=${reposUser}`)\n\nexport const getQueryUsers = (sbr) => (\n  request(`/search/users?q=${sbr}`)\n    .then(users => users.items)\n)\n","import React from 'react';\n\nimport './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"lds-ellipsis\">\n    <div></div>\n    <div></div>\n    <div></div>\n    <div></div>\n  </div>\n)\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactTooltip from 'react-tooltip';\n\nimport { getUserInfo } from \"../../api\";\nimport { Loader } from '../Loader';\n\nimport './User.scss';\n\nconst maxLoginLength = 13;\n\nexport const User = ({\n  login,\n  avatar_url,\n  selectPage,\n}) => {\n  const [repos, setRepos] = useState('');\n  const [prepareLogin, setPrepareLogin] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (login.length > maxLoginLength) {\n      setPrepareLogin(`${login.slice(0, maxLoginLength)}...`);\n    } else {\n      setPrepareLogin(login);\n    }\n\n    getUserInfo(login)\n      .then(userInfo => {\n        if (isMounted) {\n          setRepos(userInfo.public_repos);\n        }\n      })\n\n      return () => {isMounted = false};\n  }, [login]);\n\n  useEffect(() => {\n    if (repos === '') {\n      setLoading(true)\n    } else (\n      setLoading(false)\n    )\n  }, [repos]);\n\n  return (\n    <div\n      className=\"userCard\"\n      onClick={() => {\n        selectPage(login);\n      }}\n    >\n      {!loading ? (\n        <>\n          <div className=\"userCard__item-wrap\">\n            <img\n              className=\"userCard__avatar\"\n              src={avatar_url}\n              alt='User avatar'\n            />\n            <p\n              className=\"userCard__login\"\n              data-tip={login}\n              data-type=\"info\"\n            >\n              {prepareLogin}\n            </p>\n            {login.length > maxLoginLength\n              && <ReactTooltip />\n            }\n          </div>\n          <div\n            className=\"userCard__repo\"\n          >\n            <p>Repo:</p>\n            <p\n              className=\"userCard__value-repo\"\n            >\n              {repos}\n            </p>\n          </div>\n        </>\n      ) : (\n        <div className=\"userCard__loader\">\n          <Loader />\n        </div>\n      )}\n    </div>\n  )\n}\n\nUser.propTypes = {\n  login: PropTypes.string.isRequired,\n  avatar_url: PropTypes.string.isRequired,\n  selectPage: PropTypes.func.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { User } from '../User';\n\nexport const UsersList = ({\n  users,\n  selectPage,\n  }) => {\n\n  return(\n  users.map(user => (\n    <User\n      key={user.id}\n      {...user}\n      selectPage={selectPage}\n    />\n  ))\n  )\n}\n\nUsersList.propTypes = {\n  users: PropTypes.array.isRequired,\n  selectPage: PropTypes.func.isRequired,\n}\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './SearchBar.scss';\n\n\nexport const SearchBar = ({ getSearchQuery, searchQuery, placeholder }) => {\n  const [preparePlaceholder, setPreparePlaceholder] = useState('');\n\n  useEffect(() => (\n    setPreparePlaceholder(placeholder)\n  ), [placeholder])\n\n  return(\n    <input\n      className=\"searchBar\"\n      autoComplete=\"off\"\n      name=\"searchQuery\"\n      type=\"text\"\n      onChange={getSearchQuery}\n      value={searchQuery}\n      placeholder={preparePlaceholder}\n    />\n  )\n}\n\nSearchBar.propTypes = {\n  getSearchQuery: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string,\n  placeholder: PropTypes.string.isRequired,\n}\n\nSearchBar.default = {\n  searchQuery: '',\n}\n","import React, { useEffect, useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { UsersList } from '../UsersList';\nimport { SearchBar } from '../SearchBar';\nimport { getQueryUsers, getUsers } from \"../../api\";\n\nimport './Home.scss';\n\nconst usersPreview = 10;\n\nexport const Home = ({\n  selectPage,\n  placeholder,\n  changePlaceholder,\n}) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    changePlaceholder('Search for Users');\n\n    if (isMounted && searchQuery) {\n      getQueryUsers(searchQuery)\n        .then(queryUsers =>\n          setUsers(queryUsers\n            .slice(0, usersPreview)));\n\n      if (users.length === 0) {\n        setError(true)\n      } else {\n        setError(false)\n      }\n    }\n\n    if (isMounted && searchQuery === '') {\n      getUsers()\n        .then(users => {\n          setUsers(users)\n        });\n    }\n\n    return () => {isMounted = false};\n  }, [searchQuery, users.length, changePlaceholder]);\n\n  useEffect(() => {\n    getUsers()\n      .then(usersList => {\n        setUsers(usersList)\n      });\n  }, []);\n\n  const handleQuery = (event) => {\n    const {value} = event.target;\n\n    setSearchQuery(value);\n  }\n\n  return (\n    <>\n      <SearchBar\n        getSearchQuery={handleQuery}\n        searchQuery={searchQuery}\n        placeholder={placeholder}\n      />\n      {error ? (\n        <span className=\"home-page__error\">\n          No matches found\n        </span>\n      ) : (\n        <UsersList\n          users={users}\n          selectPage={selectPage}\n        />\n      )}\n    </>\n  )\n}\n\nHome.propTypes = {\n  selectPage: PropTypes.func.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  changePlaceholder: PropTypes.func.isRequired,\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Loader } from '../Loader';\n\nimport './Repo.scss';\n\nexport const Repo = ({\n  forksCount,\n  starsCount,\n  repoName,\n  userLogin,\n}) => {\n  const [prepareRepoName, setPrepareRepoName] = useState('');\n  const [loading, setLoading] = useState(true);\n  const repoLink = `https://github.com/${userLogin}/${repoName}`;\n\n  useEffect(() => {\n    if (repoName.length > 16) {\n      setPrepareRepoName(`${repoName.slice(0, 25)}...`)\n    } else {\n      setPrepareRepoName(repoName)\n    }\n  }, [repoName]);\n\n  useEffect(() => {\n    if (prepareRepoName !== '' ) {\n      setLoading(false)\n    } else {\n      setLoading(true)\n    }\n  })\n\n  return(\n    <div className=\"user-page__card-repo card-repo\">\n      {loading ? (\n        <div className=\"card-repo__loader\">\n          <Loader />\n        </div>\n      ) : (\n        <>\n          <a\n            href={repoLink}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            className=\"card-repo__repo-name\"\n          >\n            {prepareRepoName}\n          </a>\n          <div className=\"card-repo__wrap-items\">\n          <p className=\"card-repo__wrap-items__forks\">\n            <span className=\"card-repo__wrap-items__forks__count\">\n              {forksCount}\n            </span>\n            {' '}\n            Forks\n          </p>\n          <p\n          className=\"card-repo__wrap-items__stars\"\n          >\n          <span className=\"card-repo__wrap-items__stars__count\">\n        {starsCount}\n          </span>\n            {' '}\n          Stars\n          </p>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n\nRepo.propTypes = {\n  forksCount: PropTypes.number.isRequired,\n  starsCount: PropTypes.number.isRequired,\n  repoName: PropTypes.string.isRequired,\n  userLogin: PropTypes.string.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Repo } from '../Repo';\n\nexport const RepoList = ({ repos, userLogin }) => (\n  repos.map(repo => (\n    <Repo\n      key={repo.id}\n      id={repo.id}\n      starsCount={repo.stargazers_count}\n      forksCount={repo.forks}\n      repoName={repo.name}\n      userLogin={userLogin}\n    />\n  ))\n)\n\nRepoList.propTypes = {\n  repos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      stargazers_count: PropTypes.number.isRequired,\n      forks: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired\n    })\n  ).isRequired,\n  userLogin: PropTypes.string.isRequired,\n}\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from 'prop-types';\n\nimport ReactTooltip from 'react-tooltip';\n\nimport { getUserInfo, getUserRepos } from \"../../api\";\nimport { SearchBar } from \"../SearchBar\";\nimport { RepoList } from '../RepoList';\n\nimport './UserPage.scss';\n\nexport const UserPage = ({\n  login,\n  changePlaceholder,\n  placeholder,\n}) => {\n  const [userRepos, setUserRepos] = useState([]);\n  const [prepareLogin, setPrepareLogin] = useState('');\n  const [userInfo, setUserInfo] = useState({});\n  const [dateCreating, setDateCreating] = useState('');\n  const [searchQuery, setSearchQuery] = useState('');\n  const [error, setError] = useState(false);\n\n  const maxLoginLength = 13;\n\n  const handleQuery = (event) => {\n    const {value} = event.target;\n\n    setSearchQuery(value);\n  }\n\n  useEffect(() => (\n    changePlaceholder('Search for Users Repositories')\n  ), [changePlaceholder]);\n\n  useEffect(() => {\n\n    if (login.length > maxLoginLength) {\n      setPrepareLogin(\n        `${login.slice(0, maxLoginLength)}...`\n      )\n    } else {\n      setPrepareLogin(login)\n    }\n\n  }, [login]);\n\n\n  useEffect (() => {\n\n    getUserInfo(login)\n      .then(userInfo  => {\n        setUserInfo({\n          avatar_url: userInfo.avatar_url,\n          email: userInfo.email,\n          location: userInfo.location,\n          followers: userInfo.followers,\n          following: userInfo.following,\n          bio: userInfo.bio,\n          login: userInfo.login,\n          created_at: userInfo.created_at,\n        })\n\n        setDateCreating(userInfo.created_at.slice(0, 10));\n      })\n\n  }, []);\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted && searchQuery) {\n      getUserRepos(login)\n        .then(userRepos => {\n          setUserRepos(userRepos.filter(\n          repo => repo.name\n            .toLowerCase()\n            .includes(searchQuery.toLowerCase())\n          ))\n        });\n\n      if (userRepos.length === 0) {\n        setError(true)\n      } else {\n        setError(false)\n      }\n    }\n\n    if (isMounted && !searchQuery) {\n      getUserRepos(login)\n        .then(setUserRepos)\n    }\n\n\n    return () => {isMounted = false}\n  },[searchQuery, userRepos.length]);\n\n  return(\n    <div className=\"user-page\">\n      <div className=\"user-page__info info\">\n        <img\n          className=\"info__avatar\"\n          src={userInfo.avatar_url}\n          alt=\"Avatar\"\n        />\n\n        <div className=\"info__items\">\n          <p\n            className=\"info__items__login\"\n            data-tip={login}\n            data-type=\"info\"\n          >\n            {prepareLogin}\n          </p>\n\n          {\n            prepareLogin.length > maxLoginLength\n              && <ReactTooltip />\n          }\n\n          <p>\n            {userInfo.email || (\n              <span className=\"info__items__email\">\n                Email not found\n              </span>\n            )}\n          </p>\n\n          <p>\n            {userInfo.location || (\n              <span className=\"info__items__location\">\n                Location not found\n              </span>)}\n          </p>\n\n          <p className=\"info__items__data\">\n            {dateCreating}\n          </p>\n\n          <p>\n            Followers:\n            {' '}\n            <span className=\"info__items__followers-value\">\n            {userInfo.followers}\n          </span>\n          </p>\n\n          <p>\n            Following:\n            {' '}\n            <span className=\"info__items__following-value\">\n            {userInfo.following}\n          </span>\n          </p>\n        </div>\n      </div>\n      <div className=\"user-page__wrap-bio\">\n        <p className=\"user-page__bio\">\n          <span className=\"user-page__bio__word\">\n           BIO:\n          </span>\n          {' '}\n          {userInfo.bio\n          || (\n            <span className=\"user-page__bio__empty\">\n              User does not show information about him\n            </span>\n          )}\n        </p>\n      </div>\n\n      <div className=\"user-page__search-bar\">\n        <SearchBar\n          placeholder={placeholder}\n          getSearchQuery={handleQuery}\n        />\n      </div>\n\n      {error && (\n        <span className=\"user-page__error\">\n          No matches found\n        </span>\n      )}\n      <RepoList\n        repos={userRepos}\n        userLogin={login}\n      />\n    </div>\n  )\n}\n\nUserPage.propTypes = {\n  login: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  changePlaceholder: PropTypes.func.isRequired,\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Home } from './components/Home';\nimport { UserPage } from './components/UserPage';\n\nconst App = () => {\n  const [tab, setTab] = useState('home');\n  const [placeholder, setPlaceholder] = useState('Search for Users');\n  const [loginSelectedUser, setLoginSelectedUser] = useState('');\n\n  const selectPage = (login) => {\n    setTab('user_page');\n    setLoginSelectedUser(login)\n  }\n\n  const changePlaceholder = (placeholder) => (\n    setPlaceholder(placeholder)\n  )\n\n  return (\n    <div className=\"container\">\n      <h1\n        className=\"container__h1\"\n        onClick={() => (\n          setTab('home')\n        )}\n      >\n        GitHub Searcher\n      </h1>\n      {tab === 'home' &&\n      <Home\n        selectPage={selectPage}\n        placeholder={placeholder}\n        changePlaceholder={changePlaceholder}\n      />}\n      {tab !== 'home' &&\n      <UserPage\n        login={loginSelectedUser}\n        placeholder={placeholder}\n        changePlaceholder={changePlaceholder}\n      />\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}